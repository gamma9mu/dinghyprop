<?xml version="1.0" encoding="UTF-8"?>
<project name="module_server" default="compile.module.server">
  <dirname property="module.server.basedir" file="${ant.file.module_server}"/>
  
  
  <property name="compiler.args.server" value="${compiler.args}"/>
  
  <property name="server.output.dir" value="${module.server.basedir}/../out/production/Server"/>
  <property name="server.testoutput.dir" value="${module.server.basedir}/../out/test/Server"/>
  
  <path id="server.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="server.module.production.classpath">
    <pathelement location="${remotes.output.dir}"/>
    <pathelement location="${simulator.output.dir}"/>
  </path>
  
  <path id="server.runtime.production.module.classpath">
    <pathelement location="${server.output.dir}"/>
    <pathelement location="${remotes.output.dir}"/>
    <pathelement location="${simulator.output.dir}"/>
  </path>
  
  <path id="server.module.classpath">
    <pathelement location="${server.output.dir}"/>
    <pathelement location="${remotes.testoutput.dir}"/>
    <pathelement location="${remotes.output.dir}"/>
    <pathelement location="${simulator.testoutput.dir}"/>
    <pathelement location="${simulator.output.dir}"/>
  </path>
  
  <path id="server.runtime.module.classpath">
    <pathelement location="${server.testoutput.dir}"/>
    <pathelement location="${server.output.dir}"/>
    <pathelement location="${remotes.testoutput.dir}"/>
    <pathelement location="${remotes.output.dir}"/>
    <pathelement location="${simulator.testoutput.dir}"/>
    <pathelement location="${simulator.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.server">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.server">
    <patternset refid="excluded.from.module.server"/>
  </patternset>
  
  <path id="server.module.sourcepath">
    <dirset dir="${module.server.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.server" depends="compile.module.server.production,compile.module.server.tests" description="Compile module Server"/>
  
  <target name="compile.module.server.production" depends="compile.module.remotes,compile.module.simulator" description="Compile module Server; production classes">
    <mkdir dir="${server.output.dir}"/>
    <javac destdir="${server.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.server}"/>
      <bootclasspath refid="server.module.bootclasspath"/>
      <classpath refid="server.module.production.classpath"/>
      <src refid="server.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.server"/>
    </javac>
    
    <rmic base="${server.output.dir}" verify="true">
      <classpath refid="server.module.production.classpath"/>
    </rmic>
    
    <copy todir="${server.output.dir}">
      <fileset dir="${module.server.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.server.tests" depends="compile.module.server.production" description="compile module Server; test classes" unless="skip.tests"/>
  
  <target name="clean.module.server" description="cleanup module">
    <delete dir="${server.output.dir}"/>
    <delete dir="${server.testoutput.dir}"/>
  </target>
</project>
