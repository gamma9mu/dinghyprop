<?xml version="1.0" encoding="UTF-8"?>
<project name="module_client" default="compile.module.client">
  <dirname property="module.client.basedir" file="${ant.file.module_client}"/>
  
  
  <property name="compiler.args.client" value="${compiler.args}"/>
  
  <property name="client.output.dir" value="${module.client.basedir}/../out/production/Client"/>
  <property name="client.testoutput.dir" value="${module.client.basedir}/../out/test/Client"/>
  
  <path id="client.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="client.module.production.classpath">
    <pathelement location="${remotes.output.dir}"/>
    <pathelement location="${java.home}/lib/javaws.jar"/>
  </path>
  
  <path id="client.runtime.production.module.classpath">
    <pathelement location="${client.output.dir}"/>
    <pathelement location="${remotes.output.dir}"/>
  </path>
  
  <path id="client.module.classpath">
    <pathelement location="${client.output.dir}"/>
    <pathelement location="${remotes.testoutput.dir}"/>
    <pathelement location="${remotes.output.dir}"/>
  </path>
  
  <path id="client.runtime.module.classpath">
    <pathelement location="${client.testoutput.dir}"/>
    <pathelement location="${client.output.dir}"/>
    <pathelement location="${remotes.testoutput.dir}"/>
    <pathelement location="${remotes.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.client">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.client">
    <patternset refid="excluded.from.module.client"/>
  </patternset>
  
  <path id="client.module.sourcepath">
    <dirset dir="${module.client.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.client" depends="compile.module.client.production,compile.module.client.tests" description="Compile module Client"/>
  
  <target name="compile.module.client.production" depends="compile.module.remotes" description="Compile module Client; production classes">
    <mkdir dir="${client.output.dir}"/>
    <javac destdir="${client.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.client}"/>
      <bootclasspath refid="client.module.bootclasspath"/>
      <classpath refid="client.module.production.classpath"/>
      <src refid="client.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.client"/>
    </javac>

    <rmic base="${client.output.dir}" verify="true">
      <classpath refid="client.module.production.classpath"/>
    </rmic>
    
    <copy todir="${client.output.dir}">
      <fileset dir="${module.client.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.client.tests" depends="compile.module.client.production" description="compile module Client; test classes" unless="skip.tests"/>
  
  <target name="clean.module.client" description="cleanup module">
    <delete dir="${client.output.dir}"/>
    <delete dir="${client.testoutput.dir}"/>
  </target>
</project>
